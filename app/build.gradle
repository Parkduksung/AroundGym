plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

android {
    compileSdk rootProject.compileSdkVersion

    defaultConfig {
        applicationId "com.example.aroundgym"
        minSdk rootProject.minSdkVersion
        targetSdk rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding true
    }

    packagingOptions {
        exclude 'META-INF/*'
    }
}

dependencies {

    ext {
        activity_version = '1.2.2'
        fragment_version = '1.2.2'
        glide_version = '4.10.0'
        coroutines_Version = '1.5.2'
    }

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'

    //ktx
    implementation "androidx.activity:activity-ktx:$activity_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"

    //Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"

    //coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_Version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_Version"

}

// 네트워크 관련.
dependencies {

    ext.retrofit2_version = '2.9.0'
    ext.gson_version = '2.8.6'
    ext.okhttp_logging_interceptor_version = '4.9.0'

    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2_version"
    implementation "com.google.code.gson:gson:$gson_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_logging_interceptor_version"
}


// JetPack 관련
dependencies {

    ext {
        liveData_version = '2.3.0'
        viewModel_version = '2.3.0'
        lifeCycle_version = '2.3.0'
    }

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$viewModel_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$liveData_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifeCycle_version"

    //hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

}

// Test 관련.
dependencies {

    ext {
        mockito_version = '3.3.3'
        hamcrest_version = '2.2'
    }


    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "org.mockito:mockito-inline:$mockito_version"
    testImplementation "org.hamcrest:hamcrest-library:$hamcrest_version"
    testImplementation "org.hamcrest:hamcrest-core:$hamcrest_version"

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.2'
}

